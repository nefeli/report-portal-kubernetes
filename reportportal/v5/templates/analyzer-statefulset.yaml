apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "reportportal.fullname" . }}-analyzer
  labels: {{ include "labels" . | indent 4 }}
spec:
  replicas: {{ .Values.serviceanalyzer.replicaCount | default 1 }}
  selector:
    matchLabels:
      component: {{ include "reportportal.fullname" . }}-analyzer
  serviceName: {{ include "reportportal.fullname" . }}-analyzer
  template:
    metadata:
      labels:
        component: {{ include "reportportal.fullname" . }}-analyzer
    spec:
      containers:
      - env:
        - name: RP_AMQP_PASS
        {{ if .Values.rabbitmq.endpoint.cloudservice }}
          value: "{{ .Values.rabbitmq.endpoint.password }}"
        {{ else }}
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.rabbitmq.SecretName }}"
              key: "rabbitmq-password"
        {{ end }}
        - name: AMQP_URL
          value: "amqp://{{ .Values.rabbitmq.endpoint.user }}:$(RP_AMQP_PASS)@{{ .Values.rabbitmq.endpoint.address }}:{{ .Values.rabbitmq.endpoint.port }}/"
        - name: AMQP_EXCHANGE_NAME
          value: "analyzer-default"
        - name: ES_HOSTS
        {{ if .Values.elasticsearch.endpoint.cloudservice }}
          value: "http://{{ .Values.elasticsearch.endpoint.address }}"
        {{ else }}
          value: "http://{{ .Values.elasticsearch.endpoint.address }}:{{ .Values.elasticsearch.endpoint.port }}"
        {{ end }}
        image: "{{ .Values.serviceanalyzer.repository }}:{{ .Values.serviceanalyzer.tag }}"
        name: analyzer
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.serviceanalyzer.resources.requests.cpu }}
            memory: {{ .Values.serviceanalyzer.resources.requests.memory }}
          limits:
            cpu: {{ .Values.serviceanalyzer.resources.limits.cpu }}
            memory: {{ .Values.serviceanalyzer.resources.limits.memory }}
{{ include "nodeSelector" . | indent 8 }}
